generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id          String   @id @default(cuid())
  nome        String
  email       String   @unique
  cpf         String   @unique
  password    String
  accessLevel String   @default("administrativo")
  ativo       Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AgendaAulas {
  id          String    @id @default(cuid())
  alunoId     String
  aluno       Aluno     @relation(fields: [alunoId], references: [id])
  professorId String
  professor   Professor @relation(fields: [professorId], references: [id])
  data        DateTime
  hora        String
  local       String
  modalidade  String
  checkin     DateTime
  checkout    DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Responsavel {
  id          String   @id @default(cuid())
  nome        String
  email       String   @unique
  cpf         String   @unique
  telefone    String
  endereco    Json
  alunos      Aluno[]
  password    String
  accessLevel String   @default("responsavel")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Aluno {
  id            String              @id @default(cuid())
  nome          String
  email         String              @unique
  escola        String
  ano_escolar   String
  telefone      String
  endereco      Json
  ficha         String
  modalidade    String
  qtd_aulas     Int
  data_inicio   DateTime
  password      String
  responsavelId String
  responsavel   Responsavel         @relation(fields: [responsavelId], references: [id])
  dificuldades  AlunoDificuldades[]
  accessLevel   String              @default("aluno")
  ativo         Boolean             @default(true)
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  financeiro    Financeiro[]
  AgendaAulas   AgendaAulas[]
}

model Financeiro {
  id             String   @id @default(cuid())
  alunoId        String
  aluno          Aluno    @relation(fields: [alunoId], references: [id])
  qtd_aulas_compradas      Int
  qtd_aulas_executadas    Int
  valor          Float
  status         String   @default("pendente")
  conferidoConta Boolean  @default(false)
  dataPagamento  DateTime @default(now())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Professor {
  id              String              @id @default(cuid())
  nome            String
  email           String              @unique
  cpf             String              @unique
  telefone        String
  endereco        Json
  areaFormacao    Json[]
  ativo           Boolean             @default(true)
  disponibilidade Json @default("{\"segunda\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"terca\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"quarta\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"quinta\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"sexta\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"sabado\": {\"manha\": true, \"tarde\": false, \"noite\": false}}")
  ficha           Json[]
  accessLevel     String              @default("professor")
  modalidade      Json                @default("{\"presencial\": true, \"online\": false}")
  password        String
  materias        ProfessorMaterias[]
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  AgendaAulas     AgendaAulas[]
}

model Materias {
  id          String              @id @default(cuid())
  materia     String
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @default(now())
  alunos      AlunoDificuldades[]
  professores ProfessorMaterias[]
}

model AlunoDificuldades {
  alunoId   String
  materiaId String
  aluno     Aluno    @relation(fields: [alunoId], references: [id])
  materia   Materias @relation(fields: [materiaId], references: [id])

  @@id([alunoId, materiaId])
}

model ProfessorMaterias {
  professorId String
  materiaId   String
  professor   Professor @relation(fields: [professorId], references: [id])
  materia     Materias  @relation(fields: [materiaId], references: [id])

  @@id([professorId, materiaId])
}
