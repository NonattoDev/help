generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id              String               @id @default(cuid())
  nome            String
  email           String               @unique
  data_nascimento DateTime
  cpf             String               @unique
  cargo           String
  telefone        String
  password        String
  accessLevel     String               @default("administrativo")
  ativo           Boolean              @default(true)
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  financeiro      FinanceiroUsuarios[]
}


model FinanceiroUsuarios {
  id           String   @id @default(cuid())
  usuarioId    String
  usuario      Usuarios @relation(fields: [usuarioId], references: [id])
  valor        Float
  status       String   @default("pendente")
  diaPagamento String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model NiveisAcesso {
  id        String   @id @default(cuid())
  accessLevel     String
}

model Cargos {
  id    Int    @id @default(autoincrement())
  cargo String
}

// Alunos 
model FinanceiroAluno {
  id            String   @id @default(cuid())
  alunoId       String
  aluno         Aluno    @relation(fields: [alunoId], references: [id])
  qtdAulas      Int
  valor         Float
  diaVencimento String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Aluno {
  id                    String                  @id @default(cuid())
  nome                  String
  email                 String                  @unique
  escola                String
  ano_escolar           String
  data_nascimento       DateTime
  telefone              String
  endereco              Json
  ficha                 String
  modalidade            Json                    @default("{\"presencial\": true, \"online\": true}")
  password              String
  responsavelId         String
  dataInicioAulas       DateTime?
  responsavel           Responsavel             @relation(fields: [responsavelId], references: [id])
  dificuldades          String[]
  accessLevel           String                  @default("aluno")
  ativo                 Boolean                 @default(true)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  dadosFinanceiro       FinanceiroAluno[]
  AgendaAulas           AgendaAulas[]
  MateriaisRequisitados MateriaisRequisitados[]
  PagamentosAluno       PagamentosAluno[]
  Feedbacks             Feedbacks[]
  ControleAlunos        ControleAlunos[]
}

//! -------------------------------------------

model MateriaisRequisitados {
  id           String    @id @default(cuid())
  alunoId      String
  aluno        Aluno     @relation(fields: [alunoId], references: [id])
  professorId  String
  professor    Professor @relation(fields: [professorId], references: [id])
  titulo       String
  material     String
  prazo        DateTime
  status       String    @default("pendente")
  concluidoPor String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model AgendaAulas {
  id                  String                @id @default(cuid())
  alunoId             String
  aluno               Aluno                 @relation(fields: [alunoId], references: [id])
  professorId         String
  professor           Professor             @relation(fields: [professorId], references: [id])
  data                DateTime
  horaInicio          String
  horaFinal           String
  local               String
  duracao             Float
  valor_aula          Float
  materia             String
  modalidade          Modalidade
  finalizada          Boolean               @default(false)
  cancelada           Boolean               @default(false)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  FinanceiroProfessor FinanceiroProfessor[]

  @@unique([professorId, data, horaInicio, horaFinal])
}

enum Modalidade {
  PRESENCIAL
  ONLINE
}

model Valores {
  id        String   @id @default(cuid())
  nome      String
  valor     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Responsavel {
  id          String   @id @default(cuid())
  nome        String
  email       String   @unique
  cpf         String   @unique
  telefone    String
  endereco    Json
  alunos      Aluno[]
  password    String
  accessLevel String   @default("responsavel")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ControleAlunos {
  id            String   @id @default(cuid())
  alunoId       String
  aluno         Aluno    @relation(fields: [alunoId], references: [id])
  desativadoPor String
  desativadoEm  DateTime
  createdAt     DateTime @default(now())
}

model ControleProfessores {
  id            String    @id @default(cuid())
  professorId   String
  professor     Professor @relation(fields: [professorId], references: [id])
  desativadoPor String
  desativadoEm  DateTime
  createdAt     DateTime  @default(now())
}

model Feedbacks {
  id                 String    @id @default(cuid())
  alunoId            String
  aluno              Aluno     @relation(fields: [alunoId], references: [id])
  professorId        String
  professor          Professor @relation(fields: [professorId], references: [id])
  autonomia          String // Grau de autonomia nos estudos (1 a 5)
  concentracao       String // Grau de concentração na aula (1 a 5)
  engajamentoAulas   String // Grau de engajamento nas aulas (1 a 5)
  interpretacao      String // Habilidade de interpretar e responder o enunciado
  desenvolvimento    String // Detalhes sobre o desenvolvimento do aluno
  comentarios        String // Comentários sobre pontos fortes e a serem melhorados
  materiaisSugeridos String // Materiais sugeridos para facilitar a aprendizagem
  proximosPassos     String // Pontos a serem ajustados e trabalhados nas próximas aulas
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model PagamentosAluno {
  id                  String   @id @default(cuid())
  alunoId             String
  aluno               Aluno    @relation(fields: [alunoId], references: [id])
  codigoIdentificador String
  identificacao       String
  valor               Float
  mesReferencia       String
  formaPagamento      String
  dataPagamento       DateTime
  lancadoPor          String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model TokenRecuperacao {
  id        String   @id @default(cuid())
  token     String   @unique
  email     String
  utilizado Boolean  @default(false)
  validoAte DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FinanceiroProfessor {
  id               String      @id @default(cuid())
  professorId      String
  professor        Professor   @relation(fields: [professorId], references: [id])
  aulaId           String
  aula             AgendaAulas @relation(fields: [aulaId], references: [id])
  valor            Float
  valor_transporte Float
  status_aula      String
  referenciaSemana String
  dataPagamento    DateTime
  status           String      @default("pendente")
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Professor {
  id                    String                  @id @default(cuid())
  nome                  String
  email                 String                  @unique
  data_nascimento       DateTime
  cpf                   String                  @unique
  telefone              String
  endereco              Json
  areaFormacao          Json[]
  turmas_habilitadas    String[]
  img_url               String?
  ativo                 Boolean                 @default(true)
  disponibilidade       Json                    @default("{\"segunda\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"terca\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"quarta\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"quinta\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"sexta\": {\"manha\": false, \"tarde\": true, \"noite\": false}, \"sabado\": {\"manha\": true, \"tarde\": false, \"noite\": false}}")
  ficha                 Json[]
  accessLevel           String                  @default("professor")
  modalidade            Json                    @default("{\"presencial\": true, \"online\": false}")
  password              String
  materias              String[]
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  dadosFinanceiro       FinanceiroProfessor[]
  AgendaAulas           AgendaAulas[]
  MateriaisRequisitados MateriaisRequisitados[]
  Feedbacks             Feedbacks[]
  ControleProfessores   ControleProfessores[]
}

model Materias {
  id        String   @id @default(cuid())
  materia   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Series {
  id        String   @id @default(cuid())
  serie     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
